{"ast":null,"code":"var _jsxFileName = \"/Users/alyssia/StudyBuddyFinal-1/src/App.js\";\nimport React, { useState, useEffect } from 'react';\n\n// Main Pomodoro Timer component\nfunction PomodoroTimer() {\n  const [minutes, setMinutes] = useState(25); // Default Pomodoro time: 25 minutes\n  const [seconds, setSeconds] = useState(0); // Start with 0 seconds\n  const [isRunning, setIsRunning] = useState(false); // Timer state (running or paused)\n  const [isBreak, setIsBreak] = useState(false); // Whether the timer is for a break or Pomodoro session\n  const [tasks, setTasks] = useState([]); // Store tasks here\n  const [taskInput, setTaskInput] = useState(\"\"); // Input for new tasks\n\n  // Handle timer logic\n  useEffect(() => {\n    let interval;\n\n    // Start the timer if it's running\n    if (isRunning) {\n      interval = setInterval(() => {\n        // Decrease time every second\n        if (seconds === 0) {\n          if (minutes === 0) {\n            // Timer ends, switch to break\n            setIsBreak(!isBreak);\n            setMinutes(isBreak ? 25 : 5); // If it's a break, switch to 5 minutes; else, switch to 25 minutes\n            setSeconds(0);\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        } else {\n          setSeconds(seconds - 1);\n        }\n      }, 1000); // Decrease every second\n    } else {\n      // If timer is paused, clear the interval\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, [isRunning, minutes, seconds, isBreak]); // Re-run effect when timer state changes\n\n  // Add a new task to the task list\n  const addTask = () => {\n    if (taskInput.trim()) {\n      setTasks([...tasks, taskInput]); // Add task to the list\n      setTaskInput(\"\"); // Clear input field\n    }\n  };\n\n  // Remove a task from the list\n  const removeTask = index => {\n    const newTasks = tasks.filter((_, i) => i !== index);\n    setTasks(newTasks);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, isBreak ? \"Break Time!\" : \"Pomodoro Timer\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, String(minutes).padStart(2, '0'), \":\", String(seconds).padStart(2, '0')), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsRunning(!isRunning),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, isRunning ? \"Pause\" : \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setIsRunning(false);\n      setMinutes(25);\n      setSeconds(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Reset\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Manage Tasks\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: taskInput,\n    onChange: e => setTaskInput(e.target.value),\n    placeholder: \"Enter a task...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Add Task\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"task-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, tasks.map((task, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, task), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removeTask(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Remove\"))))));\n}\nexport default PomodoroTimer;","map":{"version":3,"names":["React","useState","useEffect","PomodoroTimer","minutes","setMinutes","seconds","setSeconds","isRunning","setIsRunning","isBreak","setIsBreak","tasks","setTasks","taskInput","setTaskInput","interval","setInterval","clearInterval","addTask","trim","removeTask","index","newTasks","filter","_","i","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","String","padStart","onClick","type","value","onChange","e","target","placeholder","map","task","key"],"sources":["/Users/alyssia/StudyBuddyFinal-1/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// Main Pomodoro Timer component\nfunction PomodoroTimer() {\n  const [minutes, setMinutes] = useState(25); // Default Pomodoro time: 25 minutes\n  const [seconds, setSeconds] = useState(0);  // Start with 0 seconds\n  const [isRunning, setIsRunning] = useState(false); // Timer state (running or paused)\n  const [isBreak, setIsBreak] = useState(false);   // Whether the timer is for a break or Pomodoro session\n  const [tasks, setTasks] = useState([]);  // Store tasks here\n  const [taskInput, setTaskInput] = useState(\"\"); // Input for new tasks\n\n  // Handle timer logic\n  useEffect(() => {\n    let interval;\n\n    // Start the timer if it's running\n    if (isRunning) {\n      interval = setInterval(() => {\n        // Decrease time every second\n        if (seconds === 0) {\n          if (minutes === 0) {\n            // Timer ends, switch to break\n            setIsBreak(!isBreak);\n            setMinutes(isBreak ? 25 : 5);  // If it's a break, switch to 5 minutes; else, switch to 25 minutes\n            setSeconds(0);\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        } else {\n          setSeconds(seconds - 1);\n        }\n      }, 1000); // Decrease every second\n\n    } else {\n      // If timer is paused, clear the interval\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, [isRunning, minutes, seconds, isBreak]); // Re-run effect when timer state changes\n\n  // Add a new task to the task list\n  const addTask = () => {\n    if (taskInput.trim()) {\n      setTasks([...tasks, taskInput]); // Add task to the list\n      setTaskInput(\"\"); // Clear input field\n    }\n  };\n\n  // Remove a task from the list\n  const removeTask = (index) => {\n    const newTasks = tasks.filter((_, i) => i !== index);\n    setTasks(newTasks);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"timer\">\n        <h1>{isBreak ? \"Break Time!\" : \"Pomodoro Timer\"}</h1>\n        <div className=\"time\">\n          {String(minutes).padStart(2, '0')}:{String(seconds).padStart(2, '0')}\n        </div>\n        <button onClick={() => setIsRunning(!isRunning)}>\n          {isRunning ? \"Pause\" : \"Start\"}\n        </button>\n        <button onClick={() => {\n          setIsRunning(false); \n          setMinutes(25); \n          setSeconds(0);\n        }}>\n          Reset\n        </button>\n      </div>\n\n      {/* Task Manager Section */}\n      <div className=\"task-manager\">\n        <h3>Manage Tasks</h3>\n        <input\n          type=\"text\"\n          value={taskInput}\n          onChange={(e) => setTaskInput(e.target.value)}\n          placeholder=\"Enter a task...\"\n        />\n        <button onClick={addTask}>Add Task</button>\n        <ul className=\"task-list\">\n          {tasks.map((task, index) => (\n            <li key={index}>\n              <span>{task}</span>\n              <button onClick={() => removeTask(index)}>Remove</button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default PomodoroTimer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}