{"ast":null,"code":"var _jsxFileName = \"/Users/alyssia/StudyBuddyFinal-1/src/UltradianTimer.js\",\n  _s = $RefreshSig$();\n// src/UltradianTimer.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UltradianTimer = () => {\n  _s();\n  const [minutes, setMinutes] = useState(90); // Initial work session: 90 minutes\n  const [seconds, setSeconds] = useState(0); // Initial seconds: 0\n  const [isRunning, setIsRunning] = useState(false); // Timer state: running or paused\n  const [isBreak, setIsBreak] = useState(false); // If it's break time or work time\n  const [workDuration, setWorkDuration] = useState(90); // Work period duration\n  const [breakDuration, setBreakDuration] = useState(15); // Break period duration in minutes\n\n  useEffect(() => {\n    let interval;\n\n    // Start the timer if it's running\n    if (isRunning) {\n      interval = setInterval(() => {\n        if (seconds === 0) {\n          if (minutes === 0) {\n            // Timer ends, switch to break period\n            setIsBreak(!isBreak);\n            setMinutes(isBreak ? workDuration : breakDuration); // If it's break time, switch to break duration\n            setSeconds(0);\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        } else {\n          setSeconds(seconds - 1);\n        }\n      }, 1000); // Decrease every second\n    } else {\n      clearInterval(interval); // If timer is paused, clear the interval\n    }\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, [isRunning, minutes, seconds, isBreak, workDuration, breakDuration]);\n\n  // Toggle start/pause\n  const toggleTimer = () => {\n    setIsRunning(!isRunning);\n  };\n\n  // Reset to default values\n  const resetTimer = () => {\n    setIsRunning(false);\n    setMinutes(workDuration); // Reset to the work duration\n    setSeconds(0);\n    setIsBreak(false); // Reset to work time\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isBreak ? 'Break Time!' : 'Work Time!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [String(minutes).padStart(2, '0'), \":\", String(seconds).padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTimer,\n        children: isRunning ? 'Pause' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTimer,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Work Duration (Minutes):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: workDuration,\n          onChange: e => setWorkDuration(Number(e.target.value)),\n          disabled: isRunning // Disable during timer run\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Break Duration (Minutes):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: breakDuration,\n          onChange: e => setBreakDuration(Number(e.target.value)),\n          disabled: isRunning // Disable during timer run\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(UltradianTimer, \"muyNimx0MUC3qURj2g5qRlRlb2E=\");\n_c = UltradianTimer;\nexport default UltradianTimer;\nvar _c;\n$RefreshReg$(_c, \"UltradianTimer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UltradianTimer","_s","minutes","setMinutes","seconds","setSeconds","isRunning","setIsRunning","isBreak","setIsBreak","workDuration","setWorkDuration","breakDuration","setBreakDuration","interval","setInterval","clearInterval","toggleTimer","resetTimer","children","fileName","_jsxFileName","lineNumber","columnNumber","String","padStart","onClick","type","value","onChange","e","Number","target","disabled","_c","$RefreshReg$"],"sources":["/Users/alyssia/StudyBuddyFinal-1/src/UltradianTimer.js"],"sourcesContent":["// src/UltradianTimer.js\nimport React, { useState, useEffect } from 'react';\n\nconst UltradianTimer = () => {\n  const [minutes, setMinutes] = useState(90); // Initial work session: 90 minutes\n  const [seconds, setSeconds] = useState(0);  // Initial seconds: 0\n  const [isRunning, setIsRunning] = useState(false); // Timer state: running or paused\n  const [isBreak, setIsBreak] = useState(false);   // If it's break time or work time\n  const [workDuration, setWorkDuration] = useState(90); // Work period duration\n  const [breakDuration, setBreakDuration] = useState(15); // Break period duration in minutes\n\n  useEffect(() => {\n    let interval;\n\n    // Start the timer if it's running\n    if (isRunning) {\n      interval = setInterval(() => {\n        if (seconds === 0) {\n          if (minutes === 0) {\n            // Timer ends, switch to break period\n            setIsBreak(!isBreak);\n            setMinutes(isBreak ? workDuration : breakDuration); // If it's break time, switch to break duration\n            setSeconds(0);\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        } else {\n          setSeconds(seconds - 1);\n        }\n      }, 1000); // Decrease every second\n    } else {\n      clearInterval(interval); // If timer is paused, clear the interval\n    }\n\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, [isRunning, minutes, seconds, isBreak, workDuration, breakDuration]);\n\n  // Toggle start/pause\n  const toggleTimer = () => {\n    setIsRunning(!isRunning);\n  };\n\n  // Reset to default values\n  const resetTimer = () => {\n    setIsRunning(false);\n    setMinutes(workDuration);  // Reset to the work duration\n    setSeconds(0);\n    setIsBreak(false); // Reset to work time\n  };\n\n  return (\n    <div>\n      <h2>{isBreak ? 'Break Time!' : 'Work Time!'}</h2>\n      <div>\n        {String(minutes).padStart(2, '0')}:{String(seconds).padStart(2, '0')}\n      </div>\n      <div>\n        <button onClick={toggleTimer}>\n          {isRunning ? 'Pause' : 'Start'}\n        </button>\n        <button onClick={resetTimer}>Reset</button>\n      </div>\n      <div>\n        <label>\n          Work Duration (Minutes):\n          <input\n            type=\"number\"\n            value={workDuration}\n            onChange={(e) => setWorkDuration(Number(e.target.value))}\n            disabled={isRunning} // Disable during timer run\n          />\n        </label>\n        <label>\n          Break Duration (Minutes):\n          <input\n            type=\"number\"\n            value={breakDuration}\n            onChange={(e) => setBreakDuration(Number(e.target.value))}\n            disabled={isRunning} // Disable during timer run\n          />\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default UltradianTimer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}