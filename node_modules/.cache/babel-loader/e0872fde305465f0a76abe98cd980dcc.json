{"ast":null,"code":"var _jsxFileName = \"/Users/alyssia/StudyBuddyFinal-1/src/UltradianTimer.js\";\n// src/UltradianTimer.js\nimport React, { useState, useEffect } from 'react';\nconst UltradianTimer = () => {\n  const [minutes, setMinutes] = useState(90); // Initial work session: 90 minutes\n  const [seconds, setSeconds] = useState(0); // Initial seconds: 0\n  const [isRunning, setIsRunning] = useState(false); // Timer state: running or paused\n  const [isBreak, setIsBreak] = useState(false); // If it's break time or work time\n  const [workDuration, setWorkDuration] = useState(90); // Work period duration\n  const [breakDuration, setBreakDuration] = useState(15); // Break period duration in minutes\n\n  useEffect(() => {\n    let interval;\n\n    // Start the timer if it's running\n    if (isRunning) {\n      interval = setInterval(() => {\n        if (seconds === 0) {\n          if (minutes === 0) {\n            // Timer ends, switch to break period\n            setIsBreak(!isBreak);\n            setMinutes(isBreak ? workDuration : breakDuration); // If it's break time, switch to break duration\n            setSeconds(0);\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        } else {\n          setSeconds(seconds - 1);\n        }\n      }, 1000); // Decrease every second\n    } else {\n      clearInterval(interval); // If timer is paused, clear the interval\n    }\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, [isRunning, minutes, seconds, isBreak, workDuration, breakDuration]);\n\n  // Toggle start/pause\n  const toggleTimer = () => {\n    setIsRunning(!isRunning);\n  };\n\n  // Reset to default values\n  const resetTimer = () => {\n    setIsRunning(false);\n    setMinutes(workDuration); // Reset to the work duration\n    setSeconds(0);\n    setIsBreak(false); // Reset to work time\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, isBreak ? 'Break Time!' : 'Work Time!'), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, String(minutes).padStart(2, '0'), \":\", String(seconds).padStart(2, '0')), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, isRunning ? 'Pause' : 'Start'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Reset\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Work Duration (Minutes):\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: workDuration,\n    onChange: e => setWorkDuration(Number(e.target.value)),\n    disabled: isRunning // Disable during timer run\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Break Duration (Minutes):\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: breakDuration,\n    onChange: e => setBreakDuration(Number(e.target.value)),\n    disabled: isRunning // Disable during timer run\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default UltradianTimer;","map":{"version":3,"names":["React","useState","useEffect","UltradianTimer","minutes","setMinutes","seconds","setSeconds","isRunning","setIsRunning","isBreak","setIsBreak","workDuration","setWorkDuration","breakDuration","setBreakDuration","interval","setInterval","clearInterval","toggleTimer","resetTimer","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","String","padStart","onClick","type","value","onChange","e","Number","target","disabled"],"sources":["/Users/alyssia/StudyBuddyFinal-1/src/UltradianTimer.js"],"sourcesContent":["// src/UltradianTimer.js\nimport React, { useState, useEffect } from 'react';\n\nconst UltradianTimer = () => {\n  const [minutes, setMinutes] = useState(90); // Initial work session: 90 minutes\n  const [seconds, setSeconds] = useState(0);  // Initial seconds: 0\n  const [isRunning, setIsRunning] = useState(false); // Timer state: running or paused\n  const [isBreak, setIsBreak] = useState(false);   // If it's break time or work time\n  const [workDuration, setWorkDuration] = useState(90); // Work period duration\n  const [breakDuration, setBreakDuration] = useState(15); // Break period duration in minutes\n\n  useEffect(() => {\n    let interval;\n\n    // Start the timer if it's running\n    if (isRunning) {\n      interval = setInterval(() => {\n        if (seconds === 0) {\n          if (minutes === 0) {\n            // Timer ends, switch to break period\n            setIsBreak(!isBreak);\n            setMinutes(isBreak ? workDuration : breakDuration); // If it's break time, switch to break duration\n            setSeconds(0);\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        } else {\n          setSeconds(seconds - 1);\n        }\n      }, 1000); // Decrease every second\n    } else {\n      clearInterval(interval); // If timer is paused, clear the interval\n    }\n\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, [isRunning, minutes, seconds, isBreak, workDuration, breakDuration]);\n\n  // Toggle start/pause\n  const toggleTimer = () => {\n    setIsRunning(!isRunning);\n  };\n\n  // Reset to default values\n  const resetTimer = () => {\n    setIsRunning(false);\n    setMinutes(workDuration);  // Reset to the work duration\n    setSeconds(0);\n    setIsBreak(false); // Reset to work time\n  };\n\n  return (\n    <div>\n      <h2>{isBreak ? 'Break Time!' : 'Work Time!'}</h2>\n      <div>\n        {String(minutes).padStart(2, '0')}:{String(seconds).padStart(2, '0')}\n      </div>\n      <div>\n        <button onClick={toggleTimer}>\n          {isRunning ? 'Pause' : 'Start'}\n        </button>\n        <button onClick={resetTimer}>Reset</button>\n      </div>\n      <div>\n        <label>\n          Work Duration (Minutes):\n          <input\n            type=\"number\"\n            value={workDuration}\n            onChange={(e) => setWorkDuration(Number(e.target.value))}\n            disabled={isRunning} // Disable during timer run\n          />\n        </label>\n        <label>\n          Break Duration (Minutes):\n          <input\n            type=\"number\"\n            value={breakDuration}\n            onChange={(e) => setBreakDuration(Number(e.target.value))}\n            disabled={isRunning} // Disable during timer run\n          />\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default UltradianTimer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}