{"ast":null,"code":"var _jsxFileName = \"/Users/alyssia/StudyBuddyFinal-1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Pomodoro Timer Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PomodoroTimer() {\n  _s();\n  const [minutes, setMinutes] = useState(25); // Default Pomodoro time: 25 minutes\n  const [seconds, setSeconds] = useState(0); // Start with 0 seconds\n  const [isRunning, setIsRunning] = useState(false); // Timer state (running or paused)\n  const [isBreak, setIsBreak] = useState(false); // Whether the timer is for a break or Pomodoro session\n\n  // Effect to handle timer logic\n  useEffect(() => {\n    let interval;\n\n    // Start the timer if it's running\n    if (isRunning) {\n      interval = setInterval(() => {\n        // Decrease time every second\n        if (seconds === 0) {\n          if (minutes === 0) {\n            // Timer ends, switch to break\n            setIsBreak(!isBreak);\n            setMinutes(isBreak ? 25 : 5); // If it's a break, switch to 5 minutes; else, switch to 25 minutes\n            setSeconds(0);\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        } else {\n          setSeconds(seconds - 1);\n        }\n      }, 1000); // Decrease every second\n    } else {\n      // If timer is paused, clear the interval\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, [isRunning, minutes, seconds, isBreak]); // Re-run effect when timer state changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isBreak ? \"Break Time!\" : \"Pomodoro Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time\",\n      children: [String(minutes).padStart(2, '0'), \":\", String(seconds).padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsRunning(!isRunning),\n      children: isRunning ? \"Pause\" : \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setIsRunning(false);\n        setMinutes(25);\n        setSeconds(0);\n      },\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n// Main App component, including the timer\n_s(PomodoroTimer, \"8MIb8kYEE9Ko0LZNFiNiuI/Mq/E=\");\n_c = PomodoroTimer;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(PomodoroTimer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"PomodoroTimer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PomodoroTimer","_s","minutes","setMinutes","seconds","setSeconds","isRunning","setIsRunning","isBreak","setIsBreak","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","String","padStart","onClick","_c","App","_c2","$RefreshReg$"],"sources":["/Users/alyssia/StudyBuddyFinal-1/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// Pomodoro Timer Component\nfunction PomodoroTimer() {\n  const [minutes, setMinutes] = useState(25); // Default Pomodoro time: 25 minutes\n  const [seconds, setSeconds] = useState(0);  // Start with 0 seconds\n  const [isRunning, setIsRunning] = useState(false); // Timer state (running or paused)\n  const [isBreak, setIsBreak] = useState(false);   // Whether the timer is for a break or Pomodoro session\n\n  // Effect to handle timer logic\n  useEffect(() => {\n    let interval;\n\n    // Start the timer if it's running\n    if (isRunning) {\n      interval = setInterval(() => {\n        // Decrease time every second\n        if (seconds === 0) {\n          if (minutes === 0) {\n            // Timer ends, switch to break\n            setIsBreak(!isBreak);\n            setMinutes(isBreak ? 25 : 5);  // If it's a break, switch to 5 minutes; else, switch to 25 minutes\n            setSeconds(0);\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        } else {\n          setSeconds(seconds - 1);\n        }\n      }, 1000); // Decrease every second\n\n    } else {\n      // If timer is paused, clear the interval\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, [isRunning, minutes, seconds, isBreak]); // Re-run effect when timer state changes\n\n  return (\n    <div className=\"timer\">\n      <h1>{isBreak ? \"Break Time!\" : \"Pomodoro Timer\"}</h1>\n      <div className=\"time\">\n        {String(minutes).padStart(2, '0')}:{String(seconds).padStart(2, '0')}\n      </div>\n      <button onClick={() => setIsRunning(!isRunning)}>\n        {isRunning ? \"Pause\" : \"Start\"}\n      </button>\n      <button onClick={() => {\n        setIsRunning(false); \n        setMinutes(25); \n        setSeconds(0);\n      }}>\n        Reset\n      </button>\n    </div>\n  );\n}\n\n// Main App component, including the timer\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PomodoroTimer />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}