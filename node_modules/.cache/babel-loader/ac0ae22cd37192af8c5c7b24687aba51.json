{"ast":null,"code":"var _jsxFileName = \"/Users/alyssia/StudyBuddy/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Main Pomodoro Timer component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PomodoroTimer() {\n  _s();\n  const [minutes, setMinutes] = useState(25); // Default Pomodoro time: 25 minutes\n  const [seconds, setSeconds] = useState(0); // Start with 0 seconds\n  const [isRunning, setIsRunning] = useState(false); // Timer state (running or paused)\n  const [isBreak, setIsBreak] = useState(false); // Whether the timer is for a break or Pomodoro session\n  const [tasks, setTasks] = useState([]); // Store tasks here\n  const [taskInput, setTaskInput] = useState(\"\"); // Input for new tasks\n\n  // Handle timer logic\n  useEffect(() => {\n    let interval;\n\n    // Start the timer if it's running\n    if (isRunning) {\n      interval = setInterval(() => {\n        // Decrease time every second\n        if (seconds === 0) {\n          if (minutes === 0) {\n            // Timer ends, switch to break\n            setIsBreak(!isBreak);\n            setMinutes(isBreak ? 25 : 5); // If it's a break, switch to 5 minutes; else, switch to 25 minutes\n            setSeconds(0);\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        } else {\n          setSeconds(seconds - 1);\n        }\n      }, 1000); // Decrease every second\n    } else {\n      // If timer is paused, clear the interval\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, [isRunning, minutes, seconds, isBreak]); // Re-run effect when timer state changes\n\n  // Add a new task to the task list\n  const addTask = () => {\n    if (taskInput.trim()) {\n      setTasks([...tasks, taskInput]); // Add task to the list\n      setTaskInput(\"\"); // Clear input field\n    }\n  };\n\n  // Remove a task from the list\n  const removeTask = index => {\n    const newTasks = tasks.filter((_, i) => i !== index);\n    setTasks(newTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isBreak ? \"Break Time!\" : \"Pomodoro Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: [String(minutes).padStart(2, '0'), \":\", String(seconds).padStart(2, '0')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRunning(!isRunning),\n        children: isRunning ? \"Pause\" : \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setIsRunning(false);\n          setMinutes(25);\n          setSeconds(0);\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-manager\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Manage Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: taskInput,\n        onChange: e => setTaskInput(e.target.value),\n        placeholder: \"Enter a task...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"task-list\",\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeTask(index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(PomodoroTimer, \"Gb6dPPgQM5u/P6i5CrH9qeX+mUw=\");\n_c = PomodoroTimer;\nexport default PomodoroTimer;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PomodoroTimer","_s","minutes","setMinutes","seconds","setSeconds","isRunning","setIsRunning","isBreak","setIsBreak","tasks","setTasks","taskInput","setTaskInput","interval","setInterval","clearInterval","addTask","trim","removeTask","index","newTasks","filter","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","String","padStart","onClick","type","value","onChange","e","target","placeholder","map","task","_c","$RefreshReg$"],"sources":["/Users/alyssia/StudyBuddy/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// Main Pomodoro Timer component\nfunction PomodoroTimer() {\n  const [minutes, setMinutes] = useState(25); // Default Pomodoro time: 25 minutes\n  const [seconds, setSeconds] = useState(0);  // Start with 0 seconds\n  const [isRunning, setIsRunning] = useState(false); // Timer state (running or paused)\n  const [isBreak, setIsBreak] = useState(false);   // Whether the timer is for a break or Pomodoro session\n  const [tasks, setTasks] = useState([]);  // Store tasks here\n  const [taskInput, setTaskInput] = useState(\"\"); // Input for new tasks\n\n  // Handle timer logic\n  useEffect(() => {\n    let interval;\n\n    // Start the timer if it's running\n    if (isRunning) {\n      interval = setInterval(() => {\n        // Decrease time every second\n        if (seconds === 0) {\n          if (minutes === 0) {\n            // Timer ends, switch to break\n            setIsBreak(!isBreak);\n            setMinutes(isBreak ? 25 : 5);  // If it's a break, switch to 5 minutes; else, switch to 25 minutes\n            setSeconds(0);\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        } else {\n          setSeconds(seconds - 1);\n        }\n      }, 1000); // Decrease every second\n\n    } else {\n      // If timer is paused, clear the interval\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, [isRunning, minutes, seconds, isBreak]); // Re-run effect when timer state changes\n\n  // Add a new task to the task list\n  const addTask = () => {\n    if (taskInput.trim()) {\n      setTasks([...tasks, taskInput]); // Add task to the list\n      setTaskInput(\"\"); // Clear input field\n    }\n  };\n\n  // Remove a task from the list\n  const removeTask = (index) => {\n    const newTasks = tasks.filter((_, i) => i !== index);\n    setTasks(newTasks);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"timer\">\n        <h1>{isBreak ? \"Break Time!\" : \"Pomodoro Timer\"}</h1>\n        <div className=\"time\">\n          {String(minutes).padStart(2, '0')}:{String(seconds).padStart(2, '0')}\n        </div>\n        <button onClick={() => setIsRunning(!isRunning)}>\n          {isRunning ? \"Pause\" : \"Start\"}\n        </button>\n        <button onClick={() => {\n          setIsRunning(false); \n          setMinutes(25); \n          setSeconds(0);\n        }}>\n          Reset\n        </button>\n      </div>\n\n      {/* Task Manager Section */}\n      <div className=\"task-manager\">\n        <h3>Manage Tasks</h3>\n        <input\n          type=\"text\"\n          value={taskInput}\n          onChange={(e) => setTaskInput(e.target.value)}\n          placeholder=\"Enter a task...\"\n        />\n        <button onClick={addTask}>Add Task</button>\n        <ul className=\"task-list\">\n          {tasks.map((task, index) => (\n            <li key={index}>\n              <span>{task}</span>\n              <button onClick={() => removeTask(index)}>Remove</button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default PomodoroTimer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE;EAC5C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAG;EACjD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EACzC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd,IAAIiB,QAAQ;;IAEZ;IACA,IAAIR,SAAS,EAAE;MACbQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3B;QACA,IAAIX,OAAO,KAAK,CAAC,EAAE;UACjB,IAAIF,OAAO,KAAK,CAAC,EAAE;YACjB;YACAO,UAAU,CAAC,CAACD,OAAO,CAAC;YACpBL,UAAU,CAACK,OAAO,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAE;YAC/BH,UAAU,CAAC,CAAC,CAAC;UACf,CAAC,MAAM;YACLF,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;YACvBG,UAAU,CAAC,EAAE,CAAC;UAChB;QACF,CAAC,MAAM;UACLA,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;QACzB;MACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IAEZ,CAAC,MAAM;MACL;MACAY,aAAa,CAACF,QAAQ,CAAC;IACzB;IAEA,OAAO,MAAME,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,CAACR,SAAS,EAAEJ,OAAO,EAAEE,OAAO,EAAEI,OAAO,CAAC,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMS,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIL,SAAS,CAACM,IAAI,CAAC,CAAC,EAAE;MACpBP,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEE,SAAS,CAAC,CAAC,CAAC,CAAC;MACjCC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAMM,UAAU,GAAIC,KAAK,IAAK;IAC5B,MAAMC,QAAQ,GAAGX,KAAK,CAACY,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKJ,KAAK,CAAC;IACpDT,QAAQ,CAACU,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEtB,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB3B,OAAA;MAAK0B,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpB3B,OAAA;QAAA2B,QAAA,EAAKlB,OAAO,GAAG,aAAa,GAAG;MAAgB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrD/B,OAAA;QAAK0B,SAAS,EAAC,MAAM;QAAAC,QAAA,GAClBK,MAAM,CAAC7B,OAAO,CAAC,CAAC8B,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC,GAAC,EAACD,MAAM,CAAC3B,OAAO,CAAC,CAAC4B,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,eACN/B,OAAA;QAAQkC,OAAO,EAAEA,CAAA,KAAM1B,YAAY,CAAC,CAACD,SAAS,CAAE;QAAAoB,QAAA,EAC7CpB,SAAS,GAAG,OAAO,GAAG;MAAO;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACT/B,OAAA;QAAQkC,OAAO,EAAEA,CAAA,KAAM;UACrB1B,YAAY,CAAC,KAAK,CAAC;UACnBJ,UAAU,CAAC,EAAE,CAAC;UACdE,UAAU,CAAC,CAAC,CAAC;QACf,CAAE;QAAAqB,QAAA,EAAC;MAEH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGN/B,OAAA;MAAK0B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B3B,OAAA;QAAA2B,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB/B,OAAA;QACEmC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEvB,SAAU;QACjBwB,QAAQ,EAAGC,CAAC,IAAKxB,YAAY,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC9CI,WAAW,EAAC;MAAiB;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACF/B,OAAA;QAAQkC,OAAO,EAAEhB,OAAQ;QAAAS,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3C/B,OAAA;QAAI0B,SAAS,EAAC,WAAW;QAAAC,QAAA,EACtBhB,KAAK,CAAC8B,GAAG,CAAC,CAACC,IAAI,EAAErB,KAAK,kBACrBrB,OAAA;UAAA2B,QAAA,gBACE3B,OAAA;YAAA2B,QAAA,EAAOe;UAAI;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACnB/B,OAAA;YAAQkC,OAAO,EAAEA,CAAA,KAAMd,UAAU,CAACC,KAAK,CAAE;YAAAM,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAFlDV,KAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7B,EAAA,CA7FQD,aAAa;AAAA0C,EAAA,GAAb1C,aAAa;AA+FtB,eAAeA,aAAa;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}