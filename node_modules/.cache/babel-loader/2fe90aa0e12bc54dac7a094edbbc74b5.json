{"ast":null,"code":"var _jsxFileName = \"/Users/alyssia/StudyBuddyFinal-1/src/TaskManager.js\";\nimport React, { useState } from 'react';\nfunction TaskManager() {\n  const [tasks, setTasks] = useState([]); // State to store tasks\n  const [newTask, setNewTask] = useState(''); // State to manage new task input\n\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      setTasks([...tasks, newTask]);\n      setNewTask(''); // Clear the input field\n    }\n  };\n  const handleDeleteTask = taskToDelete => {\n    setTasks(tasks.filter(task => task !== taskToDelete));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Task Manager\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newTask,\n    onChange: e => setNewTask(e.target.value),\n    placeholder: \"Enter a new task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Add Task\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, tasks.map((task, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, task, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDeleteTask(task),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 20\n    }\n  }, \"Delete\")))));\n}\nexport default TaskManager;","map":{"version":3,"names":["React","useState","TaskManager","tasks","setTasks","newTask","setNewTask","handleAddTask","trim","handleDeleteTask","taskToDelete","filter","task","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","index","key"],"sources":["/Users/alyssia/StudyBuddyFinal-1/src/TaskManager.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction TaskManager() {\n  const [tasks, setTasks] = useState([]); // State to store tasks\n  const [newTask, setNewTask] = useState(''); // State to manage new task input\n\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      setTasks([...tasks, newTask]);\n      setNewTask(''); // Clear the input field\n    }\n  };\n\n  const handleDeleteTask = (taskToDelete) => {\n    setTasks(tasks.filter(task => task !== taskToDelete));\n  };\n\n  return (\n    <div className=\"task-manager\">\n      <h2>Task Manager</h2>\n      <input\n        type=\"text\"\n        value={newTask}\n        onChange={(e) => setNewTask(e.target.value)}\n        placeholder=\"Enter a new task\"\n      />\n      <button onClick={handleAddTask}>Add Task</button>\n      <ul>\n        {tasks.map((task, index) => (\n          <li key={index}>\n            {task} <button onClick={() => handleDeleteTask(task)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TaskManager;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,WAAWA,CAAA,EAAG;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C,MAAMM,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIF,OAAO,CAACG,IAAI,CAAC,CAAC,EAAE;MAClBJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEE,OAAO,CAAC,CAAC;MAC7BC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB;EACF,CAAC;EAED,MAAMG,gBAAgB,GAAIC,YAAY,IAAK;IACzCN,QAAQ,CAACD,KAAK,CAACQ,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAKF,YAAY,CAAC,CAAC;EACvD,CAAC;EAED,oBACEV,KAAA,CAAAa,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BpB,KAAA,CAAAa,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,cAAgB,CAAC,eACrBpB,KAAA,CAAAa,aAAA;IACEQ,IAAI,EAAC,MAAM;IACXC,KAAK,EAAEjB,OAAQ;IACfkB,QAAQ,EAAGC,CAAC,IAAKlB,UAAU,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAC5CI,WAAW,EAAC,kBAAkB;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC/B,CAAC,eACFpB,KAAA,CAAAa,aAAA;IAAQc,OAAO,EAAEpB,aAAc;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAgB,CAAC,eACjDpB,KAAA,CAAAa,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGjB,KAAK,CAACyB,GAAG,CAAC,CAAChB,IAAI,EAAEiB,KAAK,kBACrB7B,KAAA,CAAAa,aAAA;IAAIiB,GAAG,EAAED,KAAM;IAAAd,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACZR,IAAI,EAAC,GAAC,eAAAZ,KAAA,CAAAa,aAAA;IAAQc,OAAO,EAAEA,CAAA,KAAMlB,gBAAgB,CAACG,IAAI,CAAE;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAc,CAClE,CACL,CACC,CACD,CAAC;AAEV;AAEA,eAAelB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}